version: '3.9'

services:
  db:
    image: postgres:13.18-alpine
    env_file: .env
    container_name: pg04
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d postgres -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  migrator:
    image: migrate/migrate
    container_name: mg04
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", 
      "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable",
      "up"
    ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default

  server:
    build:
      context: .
    env_file: .env
    container_name: go04
    restart: unless-stopped
    depends_on:
      migrator:
        condition: service_completed_successfully
    networks:
      - default
    expose:
      - "${API_PORT}"

  proxy:
    image: nginx:alpine
    container_name: nx04
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
    networks:
      - default

volumes:
  local_postgres_data: {}

networks:
  default:
    driver: bridge